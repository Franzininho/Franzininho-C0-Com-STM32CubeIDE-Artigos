/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2024 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */
/* Includes ------------------------------------------------------------------*/
#include "main.h"
#include "ssd1306.h"
/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */

/* USER CODE END Includes */

/* Private typedef -----------------------------------------------------------*/
/* USER CODE BEGIN PTD */

/* USER CODE END PTD */

/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */

/* USER CODE END PD */

/* Private macro -------------------------------------------------------------*/
/* USER CODE BEGIN PM */

/* USER CODE END PM */

/* Private variables ---------------------------------------------------------*/

I2C_HandleTypeDef hi2c1;

/* USER CODE BEGIN PV */
const unsigned char garfield_128x64 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xF8, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xCF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFB, 0xE3, 0xFF, 0xF3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0xF3, 0xFF, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x1F, 0xD9, 0xFC, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x0F, 0x00, 0x1E, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x0E, 0x1F, 0xF8, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0x87, 0xF0, 0x07, 0x00, 0x01, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x18, 0x3B, 0x80, 0x18, 0x00, 0x30, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x60, 0x00, 0x18, 0xC3, 0x01, 0xC0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x01, 0x80, 0x00, 0x0F, 0xC3, 0x8F, 0xC0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x03, 0x00, 0x00, 0x0C, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x0C, 0x00, 0x00, 0x0C, 0x07, 0xFF, 0xF8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x38, 0xC0, 0x18, 0x00, 0x00, 0x08, 0x0F, 0xFF, 0xF0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x71, 0x80, 0x30, 0x00, 0x00, 0x08, 0x0F, 0xFC, 0xFC, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xF7, 0x00, 0x60, 0x00, 0x00, 0x18, 0x3F, 0xFE, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x60, 0x00, 0x00, 0x18, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xFF, 0x00, 0xC0, 0x00, 0x00, 0x30, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0x83, 0xE0, 0xC0, 0x00, 0x00, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0x03, 0x1F, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0E, 0x01, 0x00, 0xE7, 0xC0, 0x03, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0F, 0x01, 0x80, 0xE0, 0x00, 0x06, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0F, 0x83, 0x7F, 0xF0, 0x00, 0x38, 0x00, 0x26, 0xFF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0F, 0xDC, 0x18, 0x1F, 0x87, 0xE0, 0x00, 0x26, 0xEF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0F, 0xB8, 0x0E, 0x18, 0x00, 0x30, 0x00, 0x04, 0xCF, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0F, 0x30, 0x0F, 0xC0, 0x00, 0x18, 0x00, 0x00, 0x8F, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0x30, 0x38, 0x70, 0x00, 0x18, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0x18, 0x00, 0x1F, 0x00, 0x18, 0x3B, 0x80, 0x0E, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0x8E, 0x00, 0x03, 0x80, 0x70, 0x1F, 0xF8, 0x1C, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x03, 0xE0, 0x1F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7F, 0x86, 0x00, 0x3F, 0x1F, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0xC3, 0x00, 0x00, 0x3F, 0x01, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x3F, 0xC7, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0xE0, 0x07, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x07, 0xC0, 0x3F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x3E, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0xA4, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x16, 0x01, 0xC0, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x1E, 0x01, 0xC0, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x0C, 0x01, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x04, 0x01, 0xF3, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0C, 0x01, 0xEF, 0xF7, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x18, 0x00, 0x07, 0xF0, 0x60, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x18, 0x00, 0x07, 0x80, 0x70, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0x04, 0xF0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0C, 0x1C, 0xF0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x1F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x80, 0x00, 0x01, 0xFD, 0xF0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xFD, 0xF0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x07, 0x00, 0x00, 0x01, 0xC1, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x07, 0x00, 0x00, 0x03, 0x81, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x39, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x01, 0xF0, 0x01, 0xE3, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x1F, 0x03, 0x8D, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x03, 0xFC, 0x3D, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xC0, 0x3F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xC0, 0x3F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xF1, 0xC0, 0x3F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xE0, 0xC0, 0x3F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xE0, 0xC0, 0x3F, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char taylor_lana_128x64 [] = {
    0xCB, 0xAC, 0x47, 0xEC, 0x8F, 0x81, 0xAA, 0x02, 0x64, 0x3A, 0xD0, 0xAB, 0x99, 0x31, 0xFF, 0x0B,
    0xFF, 0xAE, 0x98, 0xF0, 0xC7, 0x20, 0xD5, 0x10, 0x8F, 0x4C, 0x14, 0x36, 0x8B, 0x33, 0xF3, 0x39,
    0x6D, 0xEF, 0xE8, 0xEE, 0x81, 0x43, 0xFA, 0xAC, 0x1C, 0x3B, 0x22, 0x82, 0xBC, 0x73, 0x02, 0xFF,
    0xF5, 0x9C, 0x7E, 0xF0, 0x0C, 0x29, 0x44, 0x80, 0x90, 0x30, 0x22, 0xEA, 0x40, 0xEB, 0x0F, 0x9D,
    0xF6, 0x77, 0x7D, 0x37, 0x19, 0x00, 0x70, 0xC5, 0xD8, 0x60, 0xAC, 0xD9, 0x7C, 0x49, 0x85, 0x5F,
    0xF3, 0x2C, 0xDF, 0x08, 0xF5, 0xA3, 0x16, 0x48, 0x80, 0x09, 0x34, 0x30, 0xDD, 0xF3, 0xEF, 0xC7,
    0x36, 0xFF, 0xA7, 0x0F, 0x12, 0x8D, 0xB9, 0xA8, 0x58, 0x22, 0x01, 0x0D, 0x3D, 0xB7, 0x26, 0xBF,
    0xBD, 0xBE, 0x77, 0x0F, 0x15, 0x84, 0x21, 0x66, 0x65, 0x40, 0x05, 0x67, 0x9F, 0xF0, 0xC1, 0xBC,
    0xFF, 0xE5, 0xD0, 0xF8, 0xCF, 0x43, 0x62, 0xF4, 0x33, 0x8E, 0x19, 0x08, 0x74, 0x31, 0xE0, 0x5B,
    0xBF, 0xFF, 0xE7, 0xF1, 0x08, 0x87, 0x4D, 0x5B, 0x5E, 0x01, 0x12, 0x39, 0x98, 0x70, 0xCC, 0x9F,
    0xA9, 0xC7, 0xB7, 0x0F, 0x4E, 0x82, 0x16, 0xDC, 0xA0, 0x42, 0x02, 0x22, 0x5C, 0xCC, 0xDC, 0xEE,
    0xBB, 0xD7, 0xBC, 0xC0, 0xE1, 0x7B, 0x98, 0x59, 0xE3, 0x21, 0x38, 0x12, 0x65, 0x0D, 0x3E, 0x3F,
    0xAE, 0x90, 0xBB, 0x0F, 0x8D, 0xC8, 0xF0, 0x37, 0x11, 0x52, 0x13, 0x32, 0x35, 0x0F, 0x20, 0x7D,
    0xF7, 0x77, 0x4A, 0x10, 0x0A, 0x34, 0x40, 0xAA, 0x43, 0x01, 0x51, 0x82, 0xAF, 0x61, 0x1F, 0x4D,
    0xF9, 0xEB, 0xCF, 0x0E, 0xF4, 0xEA, 0xE2, 0xA7, 0x20, 0xB2, 0xB0, 0x6C, 0x10, 0xCC, 0x3F, 0x25,
    0xAF, 0xED, 0x66, 0xCF, 0x37, 0x30, 0xE6, 0x88, 0xC9, 0x55, 0x68, 0x8D, 0x79, 0x08, 0xBD, 0xEE,
    0x5E, 0xF9, 0xCE, 0xCE, 0xF0, 0xF1, 0x9D, 0x41, 0xC4, 0x68, 0x06, 0x63, 0x18, 0xD1, 0xBF, 0x33,
    0x69, 0xF0, 0x11, 0x70, 0x8F, 0x3C, 0xF0, 0x3F, 0x74, 0x6B, 0x81, 0x0C, 0x6B, 0x18, 0x37, 0xFC,
    0xDF, 0xE5, 0x38, 0xF7, 0x0D, 0x43, 0xA0, 0xD1, 0x03, 0x9D, 0xF5, 0x82, 0x4A, 0x8B, 0x7F, 0x56,
    0xF1, 0xB7, 0xB3, 0x0C, 0xF6, 0x0A, 0x20, 0x92, 0xD8, 0xC8, 0x07, 0x2E, 0xE2, 0x12, 0x87, 0xFB,
    0xFE, 0xB8, 0x62, 0xCF, 0x17, 0x60, 0xE5, 0x14, 0x57, 0xD3, 0x1F, 0xFA, 0x21, 0x1B, 0x1E, 0xFD,
    0x64, 0xAD, 0xEF, 0x30, 0xF6, 0x3D, 0xC5, 0x7B, 0x78, 0x3C, 0x5F, 0xB0, 0xC6, 0x90, 0xED, 0x87,
    0xFC, 0xB6, 0x6E, 0x08, 0xDD, 0xE8, 0xAF, 0xB6, 0x0D, 0xE8, 0x7F, 0x6E, 0x34, 0x30, 0x38, 0xAB,
    0x97, 0x49, 0x3E, 0xF0, 0xF9, 0x64, 0x27, 0x1A, 0xCC, 0xEE, 0x4A, 0x5B, 0xF5, 0xD8, 0xE5, 0x41,
    0x99, 0x5F, 0x0F, 0x0C, 0xB3, 0x80, 0x18, 0x0A, 0x08, 0xCE, 0x11, 0xF6, 0x01, 0xC8, 0x02, 0xBA,
    0xD0, 0x5B, 0x70, 0xEF, 0x03, 0x60, 0x00, 0xAB, 0xFF, 0x68, 0x96, 0x58, 0x4F, 0x27, 0x4B, 0x72,
    0xCE, 0x7E, 0xBF, 0x0F, 0x11, 0xC4, 0x02, 0x4C, 0x81, 0xDC, 0x13, 0xAF, 0x0F, 0x2C, 0xEB, 0xE4,
    0xFF, 0xBB, 0xF1, 0x00, 0xCB, 0xFB, 0x24, 0x7F, 0x16, 0xE0, 0x70, 0xBB, 0x61, 0x88, 0xEB, 0xB3,
    0x38, 0xBC, 0x00, 0xE8, 0xE7, 0xFA, 0x9C, 0xAF, 0xEE, 0xDC, 0x51, 0x64, 0xF6, 0x5E, 0x73, 0xA5,
    0xE4, 0xB3, 0x0C, 0xF9, 0xD2, 0xE0, 0x70, 0x1C, 0x4F, 0xF0, 0x0B, 0x93, 0x11, 0x1D, 0x13, 0x2F,
    0x73, 0xED, 0xF0, 0x04, 0x89, 0x7F, 0x40, 0x51, 0x0F, 0xE8, 0x0F, 0xFF, 0xA9, 0x00, 0x3E, 0x33,
    0x42, 0xE3, 0x12, 0xF7, 0x15, 0x3C, 0x44, 0x00, 0xDD, 0x98, 0x47, 0xBF, 0x51, 0x0F, 0x30, 0xF7,
    0xFD, 0x86, 0xF3, 0x10, 0x0B, 0x70, 0xA4, 0x14, 0xF8, 0x38, 0x83, 0x3B, 0xF0, 0x28, 0xF6, 0x3F,
    0x8F, 0xCF, 0x71, 0x0D, 0xC9, 0x69, 0x22, 0x79, 0x63, 0xBC, 0x3F, 0xFF, 0x60, 0xD0, 0xF6, 0xF2,
    0x7D, 0xBD, 0xF0, 0xF4, 0xD0, 0x4E, 0x21, 0x63, 0xEF, 0xE0, 0x1B, 0xFB, 0xCF, 0x0A, 0x77, 0xFB,
    0x9C, 0x78, 0xCC, 0xEF, 0x6B, 0x68, 0x06, 0x74, 0xD7, 0xE0, 0x11, 0xE7, 0x62, 0x9F, 0x05, 0xD9,
    0xBA, 0xD4, 0xF0, 0x72, 0xEF, 0x36, 0xFA, 0x40, 0xE7, 0xEE, 0x03, 0x38, 0x4F, 0x28, 0x1A, 0x77,
    0xDD, 0x18, 0x8F, 0xF3, 0x37, 0x00, 0x08, 0x94, 0xDD, 0xC2, 0x17, 0xFB, 0x50, 0x72, 0xF3, 0x7B,
    0xD7, 0xDF, 0x75, 0xDC, 0x0D, 0x58, 0xA4, 0xCF, 0xD6, 0xE0, 0x71, 0x8B, 0xE8, 0xF1, 0x0A, 0x5E,
    0x73, 0x3C, 0xEE, 0x4A, 0x80, 0x23, 0x01, 0x20, 0xD6, 0x8C, 0x8F, 0x0F, 0xE2, 0x50, 0x7A, 0x7B,
    0xC1, 0x4E, 0xE7, 0x7C, 0x20, 0x05, 0xC6, 0x97, 0x3F, 0xA5, 0x14, 0x26, 0x00, 0x0E, 0xEF, 0x4C,
    0x3E, 0xF2, 0xDD, 0x95, 0xA1, 0xC5, 0x09, 0x92, 0xDD, 0xE5, 0x1E, 0x40, 0x03, 0xAB, 0x68, 0xA4,
    0x40, 0xF5, 0xAD, 0xF0, 0x0E, 0xC8, 0x05, 0x38, 0x5B, 0x48, 0xE9, 0x10, 0x00, 0x8C, 0x8F, 0xB6,
    0xDE, 0xF9, 0xEB, 0x19, 0x40, 0xA9, 0xEE, 0x37, 0xFD, 0x57, 0x5C, 0xE0, 0x00, 0x00, 0xF1, 0x32,
    0x6F, 0xBF, 0xB8, 0xEC, 0x20, 0x83, 0x9A, 0x77, 0xC9, 0x8A, 0xB8, 0x10, 0x00, 0x29, 0x7C, 0xF8,
    0x23, 0x19, 0xC0, 0x46, 0x74, 0xC2, 0x87, 0x1A, 0xB1, 0x5F, 0x0C, 0x14, 0x80, 0xCB, 0x31, 0x79,
    0xB6, 0xC8, 0x3B, 0x86, 0xB4, 0x01, 0x40, 0x5D, 0x7A, 0xF4, 0x09, 0x95, 0x00, 0x01, 0x39, 0x77,
    0x81, 0x7D, 0x59, 0xDF, 0x63, 0x78, 0x4C, 0x2A, 0xB4, 0xC8, 0x7F, 0x13, 0x01, 0x02, 0x34, 0xDD,
    0x05, 0xF2, 0xFB, 0xCF, 0x75, 0x38, 0x4F, 0x6F, 0xD6, 0x30, 0xF1, 0xA6, 0xF3, 0x42, 0x5D, 0xAE,
    0xB3, 0x33, 0x79, 0x5C, 0xBC, 0x46, 0x03, 0xFC, 0x6B, 0x63, 0x95, 0xD8, 0xC8, 0x03, 0xD7, 0x18,
    0x05, 0xCE, 0xDF, 0xFF, 0x10, 0xB1, 0x54, 0x2B, 0xAF, 0xF2, 0xC2, 0x86, 0x4A, 0x04, 0x36, 0x95,
    0xFE, 0xF8, 0xFF, 0xC2, 0xC3, 0x92, 0x8C, 0x4B, 0xA6, 0xE7, 0x09, 0xF6, 0x10, 0x00, 0x86, 0x7F,
    0xFA, 0xF7, 0x66, 0xAF, 0x7F, 0x8E, 0xEB, 0x02, 0xE8, 0xF3, 0x52, 0x1C, 0x84, 0x6E, 0x9F, 0x5F,
    0xDF, 0xF7, 0x17, 0xE7, 0xFD, 0x38, 0x80, 0x9A, 0xF6, 0xC8, 0xCC, 0xB1, 0x26, 0xDF, 0x0F, 0x10,
    0xBF, 0xF5, 0x2B, 0x5E, 0xEB, 0x66, 0xE1, 0x1F, 0xFF, 0xAC, 0xDF, 0xCF, 0x8A, 0x35, 0xAE, 0xBF,
    0xBB, 0xF6, 0xED, 0xA9, 0x67, 0xF8, 0x08, 0xC5, 0x8B, 0x35, 0x3C, 0xFF, 0xEF, 0x15, 0x50, 0xBF,
    0x70, 0xDA, 0x8F, 0xDB, 0x5B, 0x77, 0xF3, 0x1F, 0x6B, 0xC6, 0x56, 0xEF, 0x7F, 0xB6, 0x83, 0xD3,
    0x7E, 0xFF, 0xED, 0xF4, 0x7C, 0xCF, 0x5F, 0x0E, 0xF3, 0x38, 0x7F, 0xD9, 0xBF, 0xC7, 0x66, 0xFF,
    0xE1, 0x46, 0x35, 0xD3, 0xA0, 0x3E, 0x83, 0xBF, 0x2A, 0xCF, 0x87, 0x7E, 0xF5, 0xBE, 0xB2, 0xA3,
    0xA0, 0xFC, 0xD7, 0xFF, 0x97, 0xFC, 0x2F, 0x7F, 0xFF, 0x2E, 0x10, 0x3F, 0xFE, 0xAF, 0xB7, 0xFA,
    0x3F, 0xCB, 0xEF, 0xC8, 0x4C, 0xB0, 0xAB, 0x38, 0xEF, 0xF7, 0xD2, 0x07, 0xBE, 0x8F, 0x2F, 0x7D,
    0x77, 0xFE, 0x9F, 0x3E, 0x90, 0xA3, 0x37, 0x8E, 0xEB, 0xDC, 0xA4, 0x9A, 0xFF, 0x2E, 0x7D, 0xFD,
    0xB7, 0x27, 0x8F, 0x49, 0x04, 0xEF, 0x76, 0xF7, 0xAE, 0xF6, 0x10, 0x3C, 0x1F, 0xC7, 0xE5, 0xB7,
    0xD9, 0xB7, 0xB2, 0xFB, 0x0F, 0x31, 0x82, 0xD7, 0xD2, 0xB0, 0xFE, 0x57, 0x25, 0xCC, 0x6D, 0x1F,
};
/* USER CODE END PV */

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
static void MX_I2C1_Init(void);
/* USER CODE BEGIN PFP */

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{

  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_I2C1_Init();
  /* USER CODE BEGIN 2 */
  ssd1306_Init();
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	ssd1306_Fill(Black);
	ssd1306_DrawBitmap(0,0,taylor_lana_128x64,128,64, White);
	ssd1306_UpdateScreen();
  }
  /* USER CODE END 3 */
}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
  {
    Error_Handler();
  }
}

/**
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{

  /* USER CODE BEGIN I2C1_Init 0 */

  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
  hi2c1.Init.Timing = 0x20303E5D;
  hi2c1.Init.OwnAddress1 = 0;
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c1.Init.OwnAddress2 = 0;
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
  {
    Error_Handler();
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
  {
    Error_Handler();
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
  {
    Error_Handler();
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}

/**
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOB_CLK_ENABLE();

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}

/* USER CODE BEGIN 4 */

/* USER CODE END 4 */

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
  {
  }
  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */
